##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/cryptography/hazmat/primitives/_serialization.py 1748113092 5123
.___v_desugar_1: Never
.annotations: Never
.abc: Never

.utils = pyimport "utils"

.___v_desugar_2 = pyimport "hashes"
.hashes = pyimport "hashes"
.HashAlgorithm: {cryptography.hazmat.primitives.hashes.HashAlgorithm}
.PBES: ClassType
cryptography = pyimport "cryptography"
.PBES <: cryptography.utils.Enum
.PBES.PBESv1SHA1And3KeyTripleDESCBC: {"PBESv1 using SHA1 and 3-Key TripleDES"}
.PBES.PBESv2SHA256AndAES256CBC: {"PBESv2 using SHA256 PBKDF2 and AES256 CBC"}

.Encoding: ClassType
.Encoding <: cryptography.utils.Enum
.Encoding.PEM: {"PEM"}
.Encoding.DER: {"DER"}
.Encoding.OpenSSH: {"OpenSSH"}
.Encoding.Raw: {"Raw"}
.Encoding.X962: {"ANSI X9.62"}
.Encoding.SMIME: {"S.MIME"}

.PrivateFormat: ClassType
.PrivateFormat <: cryptography.utils.Enum
.PrivateFormat.PKCS8: {"PKCS8"}
.PrivateFormat.TraditionalOpenSSL: {"TraditionalOpenSSL"}
.PrivateFormat.Raw: {"Raw"}
.PrivateFormat.OpenSSH: {"OpenSSH"}
.PrivateFormat.PKCS12: {"PKCS12"}
.PrivateFormat.encryption_builder: (self: cryptography.hazmat.primitives._serialization.PrivateFormat) -> Never

.PublicFormat: ClassType
.PublicFormat <: cryptography.utils.Enum
.PublicFormat.SubjectPublicKeyInfo: {"X.509 subjectPublicKeyInfo with PKCS#1"}
.PublicFormat.PKCS1: {"Raw PKCS#1"}
.PublicFormat.OpenSSH: {"OpenSSH"}
.PublicFormat.Raw: {"Raw"}
.PublicFormat.CompressedPoint: {"X9.62 Compressed Point"}
.PublicFormat.UncompressedPoint: {"X9.62 Uncompressed Point"}

.ParameterFormat: ClassType
.ParameterFormat <: cryptography.utils.Enum
.ParameterFormat.PKCS3: {"PKCS3"}

.KeySerializationEncryption: ClassType
.KeySerializationEncryption.__call__: () -> cryptography.hazmat.primitives._serialization.KeySerializationEncryption

.BestAvailableEncryption: ClassType
.BestAvailableEncryption <: cryptography.hazmat.primitives._serialization.KeySerializationEncryption
.BestAvailableEncryption.password: global::Bytes
.BestAvailableEncryption.__call__: (password: global::Bytes) -> cryptography.hazmat.primitives._serialization.BestAvailableEncryption

.NoEncryption: ClassType
.NoEncryption <: cryptography.hazmat.primitives._serialization.KeySerializationEncryption

.KeySerializationEncryptionBuilder: ClassType
.KeySerializationEncryptionBuilder._hmac_hash: NoneType or cryptography.hazmat.primitives.hashes.HashAlgorithm
.KeySerializationEncryptionBuilder._kdf_rounds: NoneType or Int
.KeySerializationEncryptionBuilder._key_cert_algorithm: NoneType or cryptography.hazmat.primitives._serialization.PBES
.KeySerializationEncryptionBuilder._format: Never
.KeySerializationEncryptionBuilder.__call__: (format: cryptography.hazmat.primitives._serialization.PrivateFormat, _kdf_rounds: NoneType or Int := {None} and NoneType or Int, _hmac_hash: NoneType or cryptography.hazmat.primitives.hashes.HashAlgorithm := {None} and NoneType or cryptography.hazmat.primitives.hashes.HashAlgorithm, _key_cert_algorithm: NoneType or cryptography.hazmat.primitives._serialization.PBES := {None} and NoneType or cryptography.hazmat.primitives._serialization.PBES) -> cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder
.KeySerializationEncryptionBuilder.kdf_rounds: (self: cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder, rounds: Int) -> cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder
.KeySerializationEncryptionBuilder.hmac_hash: (self: cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder, algorithm: cryptography.hazmat.primitives.hashes.HashAlgorithm) -> cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder
.KeySerializationEncryptionBuilder.key_cert_algorithm: (self: cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder, algorithm: cryptography.hazmat.primitives._serialization.PBES) -> cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder
.KeySerializationEncryptionBuilder.build: (self: cryptography.hazmat.primitives._serialization.KeySerializationEncryptionBuilder, password: global::Bytes) -> cryptography.hazmat.primitives._serialization.KeySerializationEncryption

._KeySerializationEncryption: ClassType

