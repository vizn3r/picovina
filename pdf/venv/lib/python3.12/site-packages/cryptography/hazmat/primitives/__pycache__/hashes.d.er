##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/cryptography/hazmat/primitives/hashes.py 1748113092 5184
.___v_desugar_1: Never
.annotations: Never
.abc: Never

.___v_desugar_2: Never
.rust_openssl: Never
.___v_desugar_3 = pyimport "utils"
.utils = pyimport "utils"
.Buffer: Never
.__all__: global::List!({"SHA1", "HashAlgorithm", "SHA512_256", "SHA3_512", "SHA512_224", "BLAKE2b", "SHA256", "ExtendableOutputFunction", "SHA3_384", "SHAKE128", "Hash", "SHA3_224", "MD5", "HashContext", "SM3", "SHA224", "SHA384", "SHAKE256", "SHA512", "BLAKE2s", "SHA3_256", "XOFHash"}, 22)
.HashAlgorithm: ClassType
.HashAlgorithm.__call__: () -> cryptography.hazmat.primitives.hashes.HashAlgorithm
.HashAlgorithm.name : (self: cryptography.hazmat.primitives.hashes.HashAlgorithm) -> Str
.HashAlgorithm.name: Str
.HashAlgorithm.digest_size : (self: cryptography.hazmat.primitives.hashes.HashAlgorithm) -> Int
.HashAlgorithm.digest_size: Int
.HashAlgorithm.block_size : (self: cryptography.hazmat.primitives.hashes.HashAlgorithm) -> NoneType or Int
.HashAlgorithm.block_size: NoneType or Int

.HashContext: ClassType
.HashContext.__call__: () -> cryptography.hazmat.primitives.hashes.HashContext
.HashContext.algorithm : (self: cryptography.hazmat.primitives.hashes.HashContext) -> cryptography.hazmat.primitives.hashes.HashAlgorithm
cryptography = pyimport "cryptography"
.HashContext.algorithm: cryptography.hazmat.primitives.hashes.HashAlgorithm
.HashContext.update: (self: cryptography.hazmat.primitives.hashes.HashContext, data: Obj) -> NoneType
.HashContext.finalize: (self: cryptography.hazmat.primitives.hashes.HashContext) -> global::Bytes
.HashContext.copy: (self: cryptography.hazmat.primitives.hashes.HashContext) -> cryptography.hazmat.primitives.hashes.HashContext

.Hash: Never

.XOFHash: Never
.ExtendableOutputFunction: ClassType
.ExtendableOutputFunction.__call__: () -> cryptography.hazmat.primitives.hashes.ExtendableOutputFunction

.SHA1: ClassType
.SHA1 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA1.name: {"sha1"}
.SHA1.digest_size: {20}
.SHA1.block_size: {64}

.SHA512_224: ClassType
.SHA512_224 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA512_224.name: {"sha512-224"}
.SHA512_224.digest_size: {28}
.SHA512_224.block_size: {128}

.SHA512_256: ClassType
.SHA512_256 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA512_256.name: {"sha512-256"}
.SHA512_256.digest_size: {32}
.SHA512_256.block_size: {128}

.SHA224: ClassType
.SHA224 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA224.name: {"sha224"}
.SHA224.digest_size: {28}
.SHA224.block_size: {64}

.SHA256: ClassType
.SHA256 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA256.name: {"sha256"}
.SHA256.digest_size: {32}
.SHA256.block_size: {64}

.SHA384: ClassType
.SHA384 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA384.name: {"sha384"}
.SHA384.digest_size: {48}
.SHA384.block_size: {128}

.SHA512: ClassType
.SHA512 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA512.name: {"sha512"}
.SHA512.digest_size: {64}
.SHA512.block_size: {128}

.SHA3_224: ClassType
.SHA3_224 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA3_224.name: {"sha3-224"}
.SHA3_224.digest_size: {28}
.SHA3_224.block_size: {None}

.SHA3_256: ClassType
.SHA3_256 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA3_256.name: {"sha3-256"}
.SHA3_256.digest_size: {32}
.SHA3_256.block_size: {None}

.SHA3_384: ClassType
.SHA3_384 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA3_384.name: {"sha3-384"}
.SHA3_384.digest_size: {48}
.SHA3_384.block_size: {None}

.SHA3_512: ClassType
.SHA3_512 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHA3_512.name: {"sha3-512"}
.SHA3_512.digest_size: {64}
.SHA3_512.block_size: {None}

.SHAKE128: ClassType
.SHAKE128 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHAKE128._digest_size: Never
.SHAKE128.__call__: (digest_size: Int) -> cryptography.hazmat.primitives.hashes.SHAKE128
.SHAKE128.name: {"shake128"}
.SHAKE128.block_size: {None}
.SHAKE128.digest_size : (self: cryptography.hazmat.primitives.hashes.SHAKE128) -> Int
.SHAKE128.digest_size: Int

.SHAKE256: ClassType
.SHAKE256 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SHAKE256._digest_size: Never
.SHAKE256.__call__: (digest_size: Int) -> cryptography.hazmat.primitives.hashes.SHAKE256
.SHAKE256.name: {"shake256"}
.SHAKE256.block_size: {None}
.SHAKE256.digest_size : (self: cryptography.hazmat.primitives.hashes.SHAKE256) -> Int
.SHAKE256.digest_size: Int

.MD5: ClassType
.MD5 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.MD5.name: {"md5"}
.MD5.digest_size: {16}
.MD5.block_size: {64}

.BLAKE2b: ClassType
.BLAKE2b <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.BLAKE2b._digest_size: Never
.BLAKE2b.__call__: (digest_size: Int) -> cryptography.hazmat.primitives.hashes.BLAKE2b
.BLAKE2b.name: {"blake2b"}
.BLAKE2b._max_digest_size: {64}
.BLAKE2b._min_digest_size: {1}
.BLAKE2b.block_size: {128}
.BLAKE2b.digest_size : (self: cryptography.hazmat.primitives.hashes.BLAKE2b) -> Int
.BLAKE2b.digest_size: Int

.BLAKE2s: ClassType
.BLAKE2s <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.BLAKE2s._digest_size: Never
.BLAKE2s.__call__: (digest_size: Int) -> cryptography.hazmat.primitives.hashes.BLAKE2s
.BLAKE2s.name: {"blake2s"}
.BLAKE2s.block_size: {64}
.BLAKE2s._max_digest_size: {32}
.BLAKE2s._min_digest_size: {1}
.BLAKE2s.digest_size : (self: cryptography.hazmat.primitives.hashes.BLAKE2s) -> Int
.BLAKE2s.digest_size: Int

.SM3: ClassType
.SM3 <: cryptography.hazmat.primitives.hashes.HashAlgorithm
.SM3.name: {"sm3"}
.SM3.digest_size: {32}
.SM3.block_size: {64}

