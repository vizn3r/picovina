##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/cryptography/hazmat/primitives/ciphers/modes.py 1748113092 8318
.___v_desugar_1: Never
.annotations: Never
.abc: Never

.utils = pyimport "utils"

.___v_desugar_2 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.UnsupportedAlgorithm: {cryptography.exceptions.UnsupportedAlgorithm}
._Reasons: Never
.___v_desugar_3 = pyimport "_cipheralgorithm"
._cipheralgorithm = pyimport "_cipheralgorithm"
.BlockCipherAlgorithm: {cryptography.hazmat.primitives._cipheralgorithm.BlockCipherAlgorithm}
.CipherAlgorithm: {cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm}
.algorithms = pyimport "algorithms"

.Mode: ClassType
.Mode.__call__: () -> modes.Mode
.Mode.name : (self: modes.Mode) -> Str
.Mode.name: Str
.Mode.validate_for_algorithm: (self: modes.Mode, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.ModeWithInitializationVector: ClassType
modes = pyimport "modes"
.ModeWithInitializationVector <: .Mode
.ModeWithInitializationVector.initialization_vector : (self: modes.ModeWithInitializationVector) -> Never
.ModeWithInitializationVector.initialization_vector: Never

.ModeWithTweak: ClassType
.ModeWithTweak <: .Mode
.ModeWithTweak.tweak : (self: modes.ModeWithTweak) -> Never
.ModeWithTweak.tweak: Never

.ModeWithNonce: ClassType
.ModeWithNonce <: .Mode
.ModeWithNonce.nonce : (self: modes.ModeWithNonce) -> Never
.ModeWithNonce.nonce: Never

.ModeWithAuthenticationTag: ClassType
.ModeWithAuthenticationTag <: .Mode
.ModeWithAuthenticationTag.tag : (self: modes.ModeWithAuthenticationTag) -> NoneType or global::Bytes
.ModeWithAuthenticationTag.tag: NoneType or global::Bytes

._check_aes_key_length: (self: modes.Mode, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType
._check_iv_length: (self: modes.ModeWithInitializationVector, algorithm: cryptography.hazmat.primitives._cipheralgorithm.BlockCipherAlgorithm) -> NoneType
._check_nonce_length: (nonce: Obj, name: Str, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType
._check_iv_and_key_length: (self: modes.ModeWithInitializationVector, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType
.CBC: ClassType
.CBC <: .ModeWithInitializationVector
.CBC._initialization_vector: Never
.CBC.__call__: (initialization_vector: Obj) -> modes.CBC
.CBC.name: {"CBC"}
.CBC.initialization_vector : (self: modes.CBC) -> Never
.CBC.initialization_vector: Never
.CBC.validate_for_algorithm: (self: modes.ModeWithInitializationVector, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.XTS: ClassType
.XTS <: .ModeWithTweak
.XTS._tweak: Never
.XTS.__call__: (tweak: Obj) -> modes.XTS
.XTS.name: {"XTS"}
.XTS.tweak : (self: modes.XTS) -> Never
.XTS.tweak: Never
.XTS.validate_for_algorithm: (self: modes.XTS, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.ECB: ClassType
.ECB <: .Mode
.ECB.name: {"ECB"}
.ECB.validate_for_algorithm: (self: modes.Mode, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.OFB: ClassType
.OFB <: .ModeWithInitializationVector
.OFB._initialization_vector: Never
.OFB.__call__: (initialization_vector: Obj) -> modes.OFB
.OFB.name: {"OFB"}
.OFB.initialization_vector : (self: modes.OFB) -> Never
.OFB.initialization_vector: Never
.OFB.validate_for_algorithm: (self: modes.ModeWithInitializationVector, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.CFB: ClassType
.CFB <: .ModeWithInitializationVector
.CFB._initialization_vector: Never
.CFB.__call__: (initialization_vector: Obj) -> modes.CFB
.CFB.name: {"CFB"}
.CFB.initialization_vector : (self: modes.CFB) -> Never
.CFB.initialization_vector: Never
.CFB.validate_for_algorithm: (self: modes.ModeWithInitializationVector, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.CFB8: ClassType
.CFB8 <: .ModeWithInitializationVector
.CFB8._initialization_vector: Never
.CFB8.__call__: (initialization_vector: Obj) -> modes.CFB8
.CFB8.name: {"CFB8"}
.CFB8.initialization_vector : (self: modes.CFB8) -> Never
.CFB8.initialization_vector: Never
.CFB8.validate_for_algorithm: (self: modes.ModeWithInitializationVector, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.CTR: ClassType
.CTR <: .ModeWithNonce
.CTR._nonce: Never
.CTR.__call__: (nonce: Obj) -> modes.CTR
.CTR.name: {"CTR"}
.CTR.nonce : (self: modes.CTR) -> Never
.CTR.nonce: Never
.CTR.validate_for_algorithm: (self: modes.CTR, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

.GCM: ClassType
.GCM <: .ModeWithInitializationVector
.GCM._tag: Never
.GCM._initialization_vector: Never
.GCM._min_tag_length: Never
.GCM.__call__: (initialization_vector: Obj, tag: NoneType or global::Bytes := NoneType or global::Bytes, min_tag_length: Int := Int) -> modes.GCM
.GCM.name: {"GCM"}
.GCM._MAX_ENCRYPTED_BYTES: Never
.GCM._MAX_AAD_BYTES: Never
.GCM.tag : (self: modes.GCM) -> NoneType or global::Bytes
.GCM.tag: NoneType or global::Bytes
.GCM.initialization_vector : (self: modes.GCM) -> Never
.GCM.initialization_vector: Never
.GCM.validate_for_algorithm: (self: modes.GCM, algorithm: cryptography.hazmat.primitives._cipheralgorithm.CipherAlgorithm) -> NoneType

