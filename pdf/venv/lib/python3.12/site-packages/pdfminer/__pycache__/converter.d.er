##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/pdfminer/converter.py 1748113092 35530
.io: Never

.logging: Never

.re: Never

.___v_desugar_1: Never
.BinaryIO: Never
.Dict: Never
.Generic: Never
.List: Never
.Optional: Never
.Sequence: Never
.TextIO: Never
.Tuple: Never
.TypeVar: Never
.Union: Never
.cast: Never
.utils = pyimport "utils"

.___v_desugar_2 = pyimport "image"
.image = pyimport "image"
.ImageWriter: {pdfminer.image.ImageWriter}
.___v_desugar_3 = pyimport "layout"
.layout = pyimport "layout"
.LAParams: Never
.LTAnno: Never
.LTChar: Never
.LTComponent: Never
.LTContainer: Never
.LTCurve: Never
.LTFigure: Never
.LTImage: Never
.LTItem: Never
.LTLayoutContainer: Never
.LTLine: Never
.LTPage: Never
.LTRect: Never
.LTText: Never
.LTTextBox: Never
.LTTextBoxVertical: Never
.LTTextGroup: Never
.LTTextLine: Never
.TextGroupElement: Never
.___v_desugar_4 = pyimport "pdfcolor"
.pdfcolor = pyimport "pdfcolor"
.PDFColorSpace: Never
.___v_desugar_5 = pyimport "pdfdevice"
.pdfdevice = pyimport "pdfdevice"
.PDFTextDevice: Never
.___v_desugar_6 = pyimport "pdfexceptions"
.pdfexceptions = pyimport "pdfexceptions"
.PDFValueError: {pdfminer.pdfexceptions.PDFValueError}
.___v_desugar_7 = pyimport "pdffont"
.pdffont = pyimport "pdffont"
.PDFFont: Never
.PDFUnicodeNotDefined: Never
.___v_desugar_8 = pyimport "pdfinterp"
.pdfinterp = pyimport "pdfinterp"
.PDFGraphicState: Never
.PDFResourceManager: Never
.___v_desugar_9 = pyimport "pdfpage"
.pdfpage = pyimport "pdfpage"
.PDFPage: Never
.___v_desugar_10 = pyimport "pdftypes"
.pdftypes = pyimport "pdftypes"
.PDFStream: Never
.___v_desugar_11 = pyimport "utils"

.AnyIO: Never
.Matrix: Never
.PathSegment: Never
.Point: Never
.Rect: Never
.apply_matrix_pt: (m: Obj, v: Obj) -> Never
.apply_matrix_rect: (m: Obj, rect: Obj) -> Never
.bbox2str: (bbox: Obj) -> Str
.enc: (x: Str) -> Str
.make_compat_str: (o: Obj) -> Str
.mult_matrix: (m1: Obj, m0: Obj) -> Never
.log: Never
.PDFLayoutAnalyzer: ClassType
.PDFLayoutAnalyzer <: Never
.PDFLayoutAnalyzer.pageno: Int
.PDFLayoutAnalyzer.ctm: Never
.PDFLayoutAnalyzer._stack: Never
.PDFLayoutAnalyzer.cur_item: Never
.PDFLayoutAnalyzer.laparams: Never
.PDFLayoutAnalyzer.__call__: (rsrcmgr: Obj, pageno: Int := Int, laparams: Obj := Obj) -> pdfminer.converter.PDFLayoutAnalyzer
.PDFLayoutAnalyzer.begin_page: (self: pdfminer.converter.PDFLayoutAnalyzer, page: Obj, ctm: Obj) -> NoneType
.PDFLayoutAnalyzer.end_page: (self: pdfminer.converter.PDFLayoutAnalyzer, page: Obj) -> NoneType
.PDFLayoutAnalyzer.begin_figure: (self: pdfminer.converter.PDFLayoutAnalyzer, name: Str, bbox: Obj, matrix: Obj) -> NoneType
.PDFLayoutAnalyzer.end_figure: (self: pdfminer.converter.PDFLayoutAnalyzer, Str) -> NoneType
.PDFLayoutAnalyzer.render_image: (self: pdfminer.converter.PDFLayoutAnalyzer, name: Str, stream: Obj) -> NoneType
.PDFLayoutAnalyzer.paint_path: Never
.PDFLayoutAnalyzer.render_char: (self: pdfminer.converter.PDFLayoutAnalyzer, matrix: Obj, font: Obj, fontsize: Float, scaling: Float, rise: Float, cid: Int, ncs: Obj, graphicstate: Obj) -> Float
.PDFLayoutAnalyzer.handle_undefined_char: (self: pdfminer.converter.PDFLayoutAnalyzer, font: Obj, cid: Int) -> Str
.PDFLayoutAnalyzer.receive_layout: (self: pdfminer.converter.PDFLayoutAnalyzer, ltpage: Obj) -> NoneType

.PDFPageAggregator: ClassType
pdfminer = pyimport "pdfminer"
.PDFPageAggregator <: pdfminer.converter.PDFLayoutAnalyzer
.PDFPageAggregator.result: Never
.PDFPageAggregator.__call__: (rsrcmgr: Obj, pageno: Int := Int, laparams: Obj := Obj) -> pdfminer.converter.PDFPageAggregator
.PDFPageAggregator.receive_layout: (self: pdfminer.converter.PDFPageAggregator, ltpage: Obj) -> NoneType
.PDFPageAggregator.get_result: (self: pdfminer.converter.PDFPageAggregator) -> Never

.IOType: Never
.PDFConverter: ClassType
.PDFConverter <: pdfminer.converter.PDFLayoutAnalyzer
.PDFConverter.outfp: Never
.PDFConverter.outfp_binary: Never
.PDFConverter.codec: Str
.PDFConverter.__call__: (rsrcmgr: Obj, outfp: Obj, codec: Str := Str, pageno: Int := Int, laparams: Obj := Obj) -> pdfminer.converter.PDFConverter
.PDFConverter._is_binary_stream: (outfp: Obj) -> Bool

.TextConverter: ClassType
.TextConverter <: Never
.TextConverter.showpageno: Bool
.TextConverter.imagewriter: Never
.TextConverter.__call__: (rsrcmgr: Obj, outfp: Obj, codec: Str := Str, pageno: Int := Int, laparams: Obj := Obj, showpageno: Bool := Bool, imagewriter: NoneType or pdfminer.image.ImageWriter := NoneType or pdfminer.image.ImageWriter) -> pdfminer.converter.TextConverter
.TextConverter.write_text: (self: pdfminer.converter.TextConverter, text: Str) -> NoneType
.TextConverter.receive_layout: (self: pdfminer.converter.TextConverter, ltpage: Obj) -> NoneType
.TextConverter.render_image: (self: pdfminer.converter.TextConverter, name: Str, stream: Obj) -> NoneType
.TextConverter.paint_path: Never

.HTMLConverter: ClassType
.HTMLConverter <: Never
.HTMLConverter.showpageno: Bool
.HTMLConverter.scale: Float
.HTMLConverter.text_colors: Never
.HTMLConverter._font: Never
.HTMLConverter.rect_colors: Never
.HTMLConverter._yoffset: Float
.HTMLConverter._fontstack: Never
.HTMLConverter.imagewriter: Never
.HTMLConverter.layoutmode: Str
.HTMLConverter.pagemargin: Int
.HTMLConverter.fontscale: Float
.HTMLConverter.__call__: (rsrcmgr: Obj, outfp: Obj, codec: Str := Str, pageno: Int := Int, laparams: Obj := Obj, scale: Float := Float, fontscale: Float := Float, layoutmode: Str := Str, showpageno: Bool := Bool, pagemargin: Int := Int, imagewriter: NoneType or pdfminer.image.ImageWriter := NoneType or pdfminer.image.ImageWriter, debug: Int := Int, rect_colors: global::Dict!({Str: Str}) or NoneType := global::Dict!({Str: Str}) or NoneType, text_colors: global::Dict!({Str: Str}) or NoneType := global::Dict!({Str: Str}) or NoneType) -> pdfminer.converter.HTMLConverter
.HTMLConverter.RECT_COLORS: Never
.HTMLConverter.TEXT_COLORS: Never
.HTMLConverter.write: (self: pdfminer.converter.HTMLConverter, text: Str) -> NoneType
.HTMLConverter.write_header: (self: pdfminer.converter.HTMLConverter) -> NoneType
.HTMLConverter.write_footer: (self: pdfminer.converter.HTMLConverter) -> NoneType
.HTMLConverter.write_text: (self: pdfminer.converter.HTMLConverter, text: Str) -> NoneType
.HTMLConverter.place_rect: (self: pdfminer.converter.HTMLConverter, color: Str, borderwidth: Int, x: Float, y: Float, w: Float, h: Float) -> NoneType
.HTMLConverter.place_border: (self: pdfminer.converter.HTMLConverter, color: Str, borderwidth: Int, item: Obj) -> NoneType
.HTMLConverter.place_image: (self: pdfminer.converter.HTMLConverter, item: Obj, borderwidth: Int, x: Float, y: Float, w: Float, h: Float) -> NoneType
.HTMLConverter.place_text: (self: pdfminer.converter.HTMLConverter, color: Str, text: Str, x: Float, y: Float, size: Float) -> NoneType
.HTMLConverter.begin_div: (self: pdfminer.converter.HTMLConverter, color: Str, borderwidth: Int, x: Float, y: Float, w: Float, h: Float, writing_mode: Str := Str) -> NoneType
.HTMLConverter.end_div: (self: pdfminer.converter.HTMLConverter, color: Str) -> NoneType
.HTMLConverter.put_text: (self: pdfminer.converter.HTMLConverter, text: Str, fontname: Str, fontsize: Float) -> NoneType
.HTMLConverter.put_newline: (self: pdfminer.converter.HTMLConverter) -> NoneType
.HTMLConverter.receive_layout: (self: pdfminer.converter.HTMLConverter, ltpage: Obj) -> NoneType
.HTMLConverter.close: (self: pdfminer.converter.HTMLConverter) -> NoneType

.XMLConverter: ClassType
.XMLConverter <: Never
.XMLConverter.stripcontrol: Bool
.XMLConverter.imagewriter: Never
.XMLConverter.__call__: (rsrcmgr: Obj, outfp: Obj, codec: Str := Str, pageno: Int := Int, laparams: Obj := Obj, imagewriter: NoneType or pdfminer.image.ImageWriter := NoneType or pdfminer.image.ImageWriter, stripcontrol: Bool := Bool) -> pdfminer.converter.XMLConverter
.XMLConverter.CONTROL: Never
.XMLConverter.write: (self: pdfminer.converter.XMLConverter, text: Str) -> NoneType
.XMLConverter.write_header: (self: pdfminer.converter.XMLConverter) -> NoneType
.XMLConverter.write_footer: (self: pdfminer.converter.XMLConverter) -> NoneType
.XMLConverter.write_text: (self: pdfminer.converter.XMLConverter, text: Str) -> NoneType
.XMLConverter.receive_layout: (self: pdfminer.converter.XMLConverter, ltpage: Obj) -> NoneType
.XMLConverter.close: (self: pdfminer.converter.XMLConverter) -> NoneType

.HOCRConverter: ClassType
.HOCRConverter <: Never
.HOCRConverter.stripcontrol: Bool
.HOCRConverter.within_chars: Never
.HOCRConverter.__call__: (rsrcmgr: Obj, outfp: Obj, codec: Str := Str, pageno: Int := Int, laparams: Obj := Obj, stripcontrol: Bool := Bool) -> pdfminer.converter.HOCRConverter
.HOCRConverter.CONTROL: Never
.HOCRConverter.bbox_repr: (self: pdfminer.converter.HOCRConverter, bbox: Obj) -> Str
.HOCRConverter.write: (self: pdfminer.converter.HOCRConverter, text: Str) -> NoneType
.HOCRConverter.write_header: (self: pdfminer.converter.HOCRConverter) -> NoneType
.HOCRConverter.write_footer: (self: pdfminer.converter.HOCRConverter) -> NoneType
.HOCRConverter.write_text: (self: pdfminer.converter.HOCRConverter, text: Str) -> NoneType
.HOCRConverter.write_word: (self: pdfminer.converter.HOCRConverter) -> NoneType
.HOCRConverter.receive_layout: (self: pdfminer.converter.HOCRConverter, ltpage: Obj) -> NoneType
.HOCRConverter.close: (self: pdfminer.converter.HOCRConverter) -> NoneType

