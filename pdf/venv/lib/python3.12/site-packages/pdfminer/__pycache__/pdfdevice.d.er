##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/pdfminer/pdfdevice.py 1748113092 9163
.logging: Never

.___v_desugar_1: Never
.TYPE_CHECKING: Never
.BinaryIO: Never
.Iterable: Never
.List: Never
.Optional: Never
.Sequence: Never
.Union: Never
.cast: Never
.utils = pyimport "utils"

.___v_desugar_2 = pyimport "pdfcolor"
.pdfcolor = pyimport "pdfcolor"
.PDFColorSpace: {pdfcolor.PDFColorSpace}
.___v_desugar_3 = pyimport "pdffont"
.pdffont = pyimport "pdffont"
.PDFFont: {pdffont.PDFFont}
.PDFUnicodeNotDefined: {pdffont.PDFUnicodeNotDefined}
.___v_desugar_4 = pyimport "pdfpage"
.pdfpage = pyimport "pdfpage"
.PDFPage: Never
.___v_desugar_5 = pyimport "pdftypes"
.pdftypes = pyimport "pdftypes"
.PDFStream: {pdftypes.PDFStream}
.___v_desugar_6 = pyimport "psparser"
.psparser = pyimport "psparser"
.PSLiteral: {psparser.PSLiteral}
.___v_desugar_7 = pyimport "utils"

.Matrix: Never
.PathSegment: Never
.Point: Never
.Rect: Never

.___v_desugar_8 = pyimport "pdfinterp"
.pdfinterp = pyimport "pdfinterp"
.PDFGraphicState: {pdfinterp.PDFGraphicState}
.PDFResourceManager: {pdfinterp.PDFResourceManager}
.PDFStackT: Never
.PDFTextState: {pdfinterp.PDFTextState}


.PDFTextSeq: Never
.logger: Never
.PDFDevice: ClassType

.PDFTextDevice: ClassType
.PDFTextDevice <: Never
.PDFTextDevice.render_string: (self: pdfdevice.PDFTextDevice, textstate: pdfinterp.PDFTextState, seq: Obj, ncs: pdfcolor.PDFColorSpace, graphicstate: pdfinterp.PDFGraphicState) -> NoneType
.PDFTextDevice.render_string_horizontal: (self: pdfdevice.PDFTextDevice, seq: Obj, matrix: Obj, pos: Obj, font: pdffont.PDFFont, fontsize: Float, scaling: Float, charspace: Float, wordspace: Float, rise: Float, dxscale: Float, ncs: pdfcolor.PDFColorSpace, graphicstate: pdfinterp.PDFGraphicState) -> Never
.PDFTextDevice.render_string_vertical: (self: pdfdevice.PDFTextDevice, seq: Obj, matrix: Obj, pos: Obj, font: pdffont.PDFFont, fontsize: Float, scaling: Float, charspace: Float, wordspace: Float, rise: Float, dxscale: Float, ncs: pdfcolor.PDFColorSpace, graphicstate: pdfinterp.PDFGraphicState) -> Never
.PDFTextDevice.render_char: (self: pdfdevice.PDFTextDevice, matrix: Obj, font: pdffont.PDFFont, fontsize: Float, scaling: Float, rise: Float, cid: Int, ncs: pdfcolor.PDFColorSpace, graphicstate: pdfinterp.PDFGraphicState) -> Float

.TagExtractor: ClassType
.TagExtractor <: Never
.TagExtractor.pageno: Never
.TagExtractor.codec: Str
.TagExtractor._stack: global::List!(psparser.PSLiteral, _: Nat)
.TagExtractor.outfp: Never
.TagExtractor.__call__: (rsrcmgr: pdfinterp.PDFResourceManager, outfp: Obj, codec: Str := Str) -> pdfdevice.TagExtractor
.TagExtractor.render_string: (self: pdfdevice.TagExtractor, textstate: pdfinterp.PDFTextState, seq: Obj, ncs: pdfcolor.PDFColorSpace, graphicstate: pdfinterp.PDFGraphicState) -> NoneType
.TagExtractor.begin_page: (self: pdfdevice.TagExtractor, page: Obj, ctm: Obj) -> NoneType
.TagExtractor.end_page: (self: pdfdevice.TagExtractor, page: Obj) -> NoneType
.TagExtractor.begin_tag: (self: pdfdevice.TagExtractor, tag: psparser.PSLiteral, props: Obj := Obj) -> NoneType
.TagExtractor.end_tag: (self: pdfdevice.TagExtractor) -> NoneType
.TagExtractor.do_tag: (self: pdfdevice.TagExtractor, tag: psparser.PSLiteral, props: Obj := Obj) -> NoneType
.TagExtractor._write: (self: pdfdevice.TagExtractor, s: Str) -> NoneType

