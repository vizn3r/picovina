##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/pdfminer/pdftypes.py 1748113092 12960
.io: Never

.logging: Never

.zlib: Never

.___v_desugar_1: Never
.TYPE_CHECKING: Never
.Any: Never
.Dict: Never
.Iterable: Never
.List: Never
.Optional: Never
.Protocol: Never
.Tuple: Never
.Union: Never
.cast: Never
.___v_desugar_2: Never
.warn: Never
.pdfexceptions = pyimport "pdfexceptions"
.settings = pyimport "settings"

.___v_desugar_3 = pyimport "ascii85"
.ascii85 = pyimport "ascii85"
.ascii85decode: (data: global::Bytes) -> global::Bytes
.asciihexdecode: (data: global::Bytes) -> global::Bytes
.___v_desugar_4 = pyimport "ccitt"
.ccitt = pyimport "ccitt"
.ccittfaxdecode: (data: global::Bytes, params: global::Dict!({Str: Obj})) -> global::Bytes
.___v_desugar_5 = pyimport "lzw"
.lzw = pyimport "lzw"
.lzwdecode: (data: global::Bytes) -> global::Bytes
.___v_desugar_6 = pyimport "psparser"
.psparser = pyimport "psparser"
.LIT: Never
.PSObject: {psparser.PSObject}
.___v_desugar_7 = pyimport "runlength"
.runlength = pyimport "runlength"
.rldecode: (data: global::Bytes) -> global::Bytes
.___v_desugar_8 = pyimport "utils"
.utils = pyimport "utils"
.apply_png_predictor: (pred: Int, colors: Int, columns: Int, bitspercomponent: Int, data: global::Bytes) -> global::Bytes
.apply_tiff_predictor: (colors: Int, columns: Int, bitspercomponent: Int, data: global::Bytes) -> global::Bytes

.___v_desugar_9 = pyimport "pdfdocument"
.pdfdocument = pyimport "pdfdocument"
.PDFDocument: Never


.logger: Never
.LITERAL_CRYPT: Never
.LITERALS_FLATE_DECODE: Never
.LITERALS_LZW_DECODE: Never
.LITERALS_ASCII85_DECODE: Never
.LITERALS_ASCIIHEX_DECODE: Never
.LITERALS_RUNLENGTH_DECODE: Never
.LITERALS_CCITTFAX_DECODE: Never
.LITERALS_DCT_DECODE: Never
.LITERALS_JBIG2_DECODE: Never
.LITERALS_JPX_DECODE: Never
.DecipherCallable: ClassType
.DecipherCallable <: Never
.DecipherCallable.__call__: Never

.PDFObject: ClassType
.PDFObject <: psparser.PSObject

.PDFException: {pdfminer.pdfexceptions.PDFException}
.PDFTypeError: {pdfminer.pdfexceptions.PDFTypeError}
.PDFValueError: {pdfminer.pdfexceptions.PDFValueError}
.PDFObjectNotFound: {pdfminer.pdfexceptions.PDFObjectNotFound}
.PDFNotImplementedError: {pdfminer.pdfexceptions.PDFNotImplementedError}
._DEFAULT: Obj
.PDFObjRef: ClassType
pdftypes = pyimport "pdftypes"
.PDFObjRef <: .PDFObject
.PDFObjRef.doc: Never
.PDFObjRef.objid: Int
.PDFObjRef.__call__: (doc: Obj, objid: Int, _: Obj := Obj) -> pdftypes.PDFObjRef
.PDFObjRef.__repr__: (self: pdftypes.PDFObjRef) -> Str
.PDFObjRef.resolve: (self: pdftypes.PDFObjRef, default: Obj := Obj) -> Never

.resolve1: (x: Obj, default: Obj := Obj) -> Never
.resolve_all: (x: Obj, default: Obj := Obj) -> Never
.decipher_all: (decipher: pdftypes.DecipherCallable, objid: Int, genno: Int, x: Obj) -> Never
.int_value: (x: Obj) -> Int
.float_value: (x: Obj) -> Float
.num_value: (x: Obj) -> Float
.uint_value: (x: Obj, n_bits: Int) -> Int
.str_value: (x: Obj) -> global::Bytes
.list_value: Never
.dict_value: Never
.stream_value: (x: Obj) -> Never
.decompress_corrupted: (data: global::Bytes) -> global::Bytes
.PDFStream: ClassType
.PDFStream <: .PDFObject
.PDFStream.decipher: Never
.PDFStream.genno: Never
.PDFStream.data: Never
.PDFStream.attrs: Never
.PDFStream.objid: Never
.PDFStream.rawdata: global::Bytes
.PDFStream.__call__: Never
.PDFStream.set_objid: (self: pdftypes.PDFStream, objid: Int, genno: Int) -> NoneType
.PDFStream.__repr__: (self: pdftypes.PDFStream) -> Str
.PDFStream.__contains__: (self: pdftypes.PDFStream, name: Obj) -> Bool
.PDFStream.__getitem__: (self: pdftypes.PDFStream, name: Str) -> Never
.PDFStream.get: (self: pdftypes.PDFStream, name: Str, default: Obj := Obj) -> Never
.PDFStream.get_any: (self: pdftypes.PDFStream, names: global::Iterable(Str), default: Obj := Obj) -> Never
.PDFStream.get_filters: Never
.PDFStream.decode: (self: pdftypes.PDFStream) -> NoneType
.PDFStream.get_data: (self: pdftypes.PDFStream) -> global::Bytes
.PDFStream.get_rawdata: (self: pdftypes.PDFStream) -> NoneType or global::Bytes

