##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/pdfminer/image.py 1748113092 9444
.os: Never

.os: Never

.struct: Never

.___v_desugar_1: Never
.BytesIO: Never
.___v_desugar_2: Never
.BinaryIO: Never
.Literal: Never
.Tuple: Never
.___v_desugar_3 = pyimport "jbig2"
.jbig2 = pyimport "jbig2"
.JBIG2StreamReader: {pdfminer.jbig2.JBIG2StreamReader}
.JBIG2StreamWriter: {pdfminer.jbig2.JBIG2StreamWriter}
.___v_desugar_4 = pyimport "layout"
.layout = pyimport "layout"
.LTImage: Never
.___v_desugar_5 = pyimport "pdfcolor"
.pdfcolor = pyimport "pdfcolor"
.LITERAL_DEVICE_CMYK: Never
.LITERAL_DEVICE_GRAY: Never
.LITERAL_DEVICE_RGB: Never
.LITERAL_INLINE_DEVICE_GRAY: Never
.LITERAL_INLINE_DEVICE_RGB: Never
.___v_desugar_6 = pyimport "pdfexceptions"
.pdfexceptions = pyimport "pdfexceptions"
.PDFValueError: {pdfminer.pdfexceptions.PDFValueError}
.___v_desugar_7 = pyimport "pdftypes"
.pdftypes = pyimport "pdftypes"
.LITERALS_DCT_DECODE: Never
.LITERALS_FLATE_DECODE: Never
.LITERALS_JBIG2_DECODE: Never
.LITERALS_JPX_DECODE: Never
.PIL_ERROR_MESSAGE: {"Could not import Pillow. This dependency of pdfminer.six is not installed by default. You need it to to save jpg images to a file. Install it with `pip install \'pdfminer.six[image]\'`"}
.align32: (x: Int) -> Int
.BMPWriter: ClassType
.BMPWriter.fp: Never
.BMPWriter.datasize: Never
.BMPWriter.pos1: Never
.BMPWriter.bits: Int
.BMPWriter.linesize: Never
.BMPWriter.height: Int
.BMPWriter.pos0: Never
.BMPWriter.width: Int
.BMPWriter.__call__: (fp: Obj, bits: Int, width: Int, height: Int) -> pdfminer.image.BMPWriter
.BMPWriter.write_line: (self: pdfminer.image.BMPWriter, y: Int, data: global::Bytes) -> NoneType

.ImageWriter: ClassType
.ImageWriter.outdir: Str
.ImageWriter.__call__: (outdir: Str) -> pdfminer.image.ImageWriter
.ImageWriter.export_image: (self: pdfminer.image.ImageWriter, image: Obj) -> Str
.ImageWriter._save_jpeg: (self: pdfminer.image.ImageWriter, image: Obj) -> Str
.ImageWriter._save_jpeg2000: (self: pdfminer.image.ImageWriter, image: Obj) -> Str
.ImageWriter._save_jbig2: (self: pdfminer.image.ImageWriter, image: Obj) -> Str
.ImageWriter._save_bmp: (self: pdfminer.image.ImageWriter, image: Obj, width: Int, height: Int, bytes_per_line: Int, bits: Int) -> Str
.ImageWriter._save_bytes: (self: pdfminer.image.ImageWriter, image: Obj) -> Str
.ImageWriter._save_raw: (self: pdfminer.image.ImageWriter, image: Obj) -> Str
.ImageWriter._is_jbig2_iamge: (image: Obj) -> Bool
.ImageWriter._create_unique_image_name: (self: pdfminer.image.ImageWriter, image: Obj, ext: Str) -> global::Tuple([Str, Str])

