##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/charset_normalizer/md.py 1748113092 20145
.___v_desugar_1: Never
.annotations: Never
.___v_desugar_2: Never
.lru_cache: Never
.___v_desugar_3: Never
.getLogger: Never
.___v_desugar_4 = pyimport "constant"
.constant = pyimport "constant"
.COMMON_SAFE_ASCII_CHARACTERS: Never
.TRACE: {5}
.UNICODE_SECONDARY_RANGE_KEYWORD: Never
.___v_desugar_5 = pyimport "utils"
.utils = pyimport "utils"
.is_accentuated: (character: Str) -> Bool
.is_arabic: (character: Str) -> Bool
.is_arabic_isolated_form: (character: Str) -> Bool
.is_case_variable: (character: Str) -> Bool
.is_cjk: (character: Str) -> Bool
.is_emoticon: (character: Str) -> Bool
.is_hangul: (character: Str) -> Bool
.is_hiragana: (character: Str) -> Bool
.is_katakana: (character: Str) -> Bool
.is_latin: (character: Str) -> Bool
.is_punctuation: (character: Str) -> Bool
.is_separator: (character: Str) -> Bool
.is_symbol: (character: Str) -> Bool
.is_thai: (character: Str) -> Bool
.is_unprintable: (character: Str) -> Bool
.remove_accent: (character: Str) -> Str
.unicode_range: (character: Str) -> NoneType or Str
.is_cjk_uncommon: (character: Str) -> Bool
.MessDetectorPlugin: ClassType
.MessDetectorPlugin.__call__: () -> md.MessDetectorPlugin
.MessDetectorPlugin.eligible: (self: md.MessDetectorPlugin, character: Str) -> Bool
.MessDetectorPlugin.feed: (self: md.MessDetectorPlugin, character: Str) -> NoneType
.MessDetectorPlugin.reset: (self: md.MessDetectorPlugin) -> NoneType
.MessDetectorPlugin.ratio : (self: md.MessDetectorPlugin) -> Float
.MessDetectorPlugin.ratio: Float

.TooManySymbolOrPunctuationPlugin: ClassType
md = pyimport "md"
.TooManySymbolOrPunctuationPlugin <: .MessDetectorPlugin
.TooManySymbolOrPunctuationPlugin._symbol_count: Int
.TooManySymbolOrPunctuationPlugin._punctuation_count: Int
.TooManySymbolOrPunctuationPlugin._character_count: Int
.TooManySymbolOrPunctuationPlugin._frenzy_symbol_in_word: Bool
.TooManySymbolOrPunctuationPlugin._last_printable_char: NoneType or Str
.TooManySymbolOrPunctuationPlugin.__call__: () -> md.TooManySymbolOrPunctuationPlugin
.TooManySymbolOrPunctuationPlugin.eligible: (self: md.TooManySymbolOrPunctuationPlugin, character: Str) -> Bool
.TooManySymbolOrPunctuationPlugin.feed: (self: md.TooManySymbolOrPunctuationPlugin, character: Str) -> NoneType
.TooManySymbolOrPunctuationPlugin.reset: (self: md.TooManySymbolOrPunctuationPlugin) -> NoneType
.TooManySymbolOrPunctuationPlugin.ratio : (self: md.TooManySymbolOrPunctuationPlugin) -> Float
.TooManySymbolOrPunctuationPlugin.ratio: Float

.TooManyAccentuatedPlugin: ClassType
.TooManyAccentuatedPlugin <: .MessDetectorPlugin
.TooManyAccentuatedPlugin._character_count: Int
.TooManyAccentuatedPlugin._accentuated_count: Int
.TooManyAccentuatedPlugin.__call__: () -> md.TooManyAccentuatedPlugin
.TooManyAccentuatedPlugin.eligible: (self: md.TooManyAccentuatedPlugin, character: Str) -> Bool
.TooManyAccentuatedPlugin.feed: (self: md.TooManyAccentuatedPlugin, character: Str) -> NoneType
.TooManyAccentuatedPlugin.reset: (self: md.TooManyAccentuatedPlugin) -> NoneType
.TooManyAccentuatedPlugin.ratio : (self: md.TooManyAccentuatedPlugin) -> Float
.TooManyAccentuatedPlugin.ratio: Float

.UnprintablePlugin: ClassType
.UnprintablePlugin <: .MessDetectorPlugin
.UnprintablePlugin._character_count: Int
.UnprintablePlugin._unprintable_count: Int
.UnprintablePlugin.__call__: () -> md.UnprintablePlugin
.UnprintablePlugin.eligible: (self: md.UnprintablePlugin, character: Str) -> Bool
.UnprintablePlugin.feed: (self: md.UnprintablePlugin, character: Str) -> NoneType
.UnprintablePlugin.reset: (self: md.UnprintablePlugin) -> NoneType
.UnprintablePlugin.ratio : (self: md.UnprintablePlugin) -> Float
.UnprintablePlugin.ratio: Float

.SuspiciousDuplicateAccentPlugin: ClassType
.SuspiciousDuplicateAccentPlugin <: .MessDetectorPlugin
.SuspiciousDuplicateAccentPlugin._character_count: Int
.SuspiciousDuplicateAccentPlugin._last_latin_character: NoneType or Str
.SuspiciousDuplicateAccentPlugin._successive_count: Int
.SuspiciousDuplicateAccentPlugin.__call__: () -> md.SuspiciousDuplicateAccentPlugin
.SuspiciousDuplicateAccentPlugin.eligible: (self: md.SuspiciousDuplicateAccentPlugin, character: Str) -> Bool
.SuspiciousDuplicateAccentPlugin.feed: (self: md.SuspiciousDuplicateAccentPlugin, character: Str) -> NoneType
.SuspiciousDuplicateAccentPlugin.reset: (self: md.SuspiciousDuplicateAccentPlugin) -> NoneType
.SuspiciousDuplicateAccentPlugin.ratio : (self: md.SuspiciousDuplicateAccentPlugin) -> Float
.SuspiciousDuplicateAccentPlugin.ratio: Float

.SuspiciousRange: ClassType
.SuspiciousRange <: .MessDetectorPlugin
.SuspiciousRange._character_count: Int
.SuspiciousRange._last_printable_seen: NoneType or Str
.SuspiciousRange._suspicious_successive_range_count: Int
.SuspiciousRange.__call__: () -> md.SuspiciousRange
.SuspiciousRange.eligible: (self: md.SuspiciousRange, character: Str) -> Bool
.SuspiciousRange.feed: (self: md.SuspiciousRange, character: Str) -> NoneType
.SuspiciousRange.reset: (self: md.SuspiciousRange) -> NoneType
.SuspiciousRange.ratio : (self: md.SuspiciousRange) -> Float
.SuspiciousRange.ratio: Float

.SuperWeirdWordPlugin: ClassType
.SuperWeirdWordPlugin <: .MessDetectorPlugin
.SuperWeirdWordPlugin._is_current_word_bad: Bool
.SuperWeirdWordPlugin._bad_character_count: Int
.SuperWeirdWordPlugin._word_count: Int
.SuperWeirdWordPlugin._buffer_glyph_count: Int
.SuperWeirdWordPlugin._buffer: Str
.SuperWeirdWordPlugin._foreign_long_watch: Bool
.SuperWeirdWordPlugin._buffer_accent_count: Int
.SuperWeirdWordPlugin._bad_word_count: Int
.SuperWeirdWordPlugin._foreign_long_count: Int
.SuperWeirdWordPlugin._character_count: Int
.SuperWeirdWordPlugin.__call__: () -> md.SuperWeirdWordPlugin
.SuperWeirdWordPlugin.eligible: (self: md.SuperWeirdWordPlugin, character: Str) -> Bool
.SuperWeirdWordPlugin.feed: (self: md.SuperWeirdWordPlugin, character: Str) -> NoneType
.SuperWeirdWordPlugin.reset: (self: md.SuperWeirdWordPlugin) -> NoneType
.SuperWeirdWordPlugin.ratio : (self: md.SuperWeirdWordPlugin) -> Float
.SuperWeirdWordPlugin.ratio: Float

.CjkUncommonPlugin: ClassType
.CjkUncommonPlugin <: .MessDetectorPlugin
.CjkUncommonPlugin._character_count: Int
.CjkUncommonPlugin._uncommon_count: Int
.CjkUncommonPlugin.__call__: () -> md.CjkUncommonPlugin
.CjkUncommonPlugin.eligible: (self: md.CjkUncommonPlugin, character: Str) -> Bool
.CjkUncommonPlugin.feed: (self: md.CjkUncommonPlugin, character: Str) -> NoneType
.CjkUncommonPlugin.reset: (self: md.CjkUncommonPlugin) -> NoneType
.CjkUncommonPlugin.ratio : (self: md.CjkUncommonPlugin) -> Float
.CjkUncommonPlugin.ratio: Float

.ArchaicUpperLowerPlugin: ClassType
.ArchaicUpperLowerPlugin <: .MessDetectorPlugin
.ArchaicUpperLowerPlugin._character_count_since_last_sep: Int
.ArchaicUpperLowerPlugin._last_alpha_seen: NoneType or Str
.ArchaicUpperLowerPlugin._current_ascii_only: Bool
.ArchaicUpperLowerPlugin._buf: Bool
.ArchaicUpperLowerPlugin._character_count: Int
.ArchaicUpperLowerPlugin._successive_upper_lower_count: Int
.ArchaicUpperLowerPlugin._successive_upper_lower_count_final: Int
.ArchaicUpperLowerPlugin.__call__: () -> md.ArchaicUpperLowerPlugin
.ArchaicUpperLowerPlugin.eligible: (self: md.ArchaicUpperLowerPlugin, character: Str) -> Bool
.ArchaicUpperLowerPlugin.feed: (self: md.ArchaicUpperLowerPlugin, character: Str) -> NoneType
.ArchaicUpperLowerPlugin.reset: (self: md.ArchaicUpperLowerPlugin) -> NoneType
.ArchaicUpperLowerPlugin.ratio : (self: md.ArchaicUpperLowerPlugin) -> Float
.ArchaicUpperLowerPlugin.ratio: Float

.ArabicIsolatedFormPlugin: ClassType
.ArabicIsolatedFormPlugin <: .MessDetectorPlugin
.ArabicIsolatedFormPlugin._character_count: Int
.ArabicIsolatedFormPlugin._isolated_form_count: Int
.ArabicIsolatedFormPlugin.__call__: () -> md.ArabicIsolatedFormPlugin
.ArabicIsolatedFormPlugin.reset: (self: md.ArabicIsolatedFormPlugin) -> NoneType
.ArabicIsolatedFormPlugin.eligible: (self: md.ArabicIsolatedFormPlugin, character: Str) -> Bool
.ArabicIsolatedFormPlugin.feed: (self: md.ArabicIsolatedFormPlugin, character: Str) -> NoneType
.ArabicIsolatedFormPlugin.ratio : (self: md.ArabicIsolatedFormPlugin) -> Float
.ArabicIsolatedFormPlugin.ratio: Float

.is_suspiciously_successive_range: (unicode_range_a: NoneType or Str, unicode_range_b: NoneType or Str) -> Bool
.mess_ratio: (decoded_sequence: Str, maximum_threshold: Float := Float, debug: Bool := Bool) -> Float
