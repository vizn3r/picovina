##[pylyzer] failed /home/vizn3r/dev/dano-picovina/pdf/venv/lib/python3.12/site-packages/charset_normalizer/api.py 1748113092 22617
.___v_desugar_1: Never
.annotations: Never
.logging: Never

.___v_desugar_2: Never
.PathLike: Never
.___v_desugar_3: Never
.BinaryIO: Never
.___v_desugar_4 = pyimport "cd"
.cd = pyimport "cd"
.coherence_ratio: (decoded_sequence: Str, threshold: Float := Float, lg_inclusion: NoneType or Str := NoneType or Str) -> Never
.encoding_languages: (iana_name: Str) -> global::List!(Str, _: Nat)
.mb_encoding_languages: (iana_name: Str) -> global::List!(Str, _: Nat)
.merge_coherence_ratios: Never
.___v_desugar_5 = pyimport "constant"
.constant = pyimport "constant"
.IANA_SUPPORTED: Never
.TOO_BIG_SEQUENCE: Never
.TOO_SMALL_SEQUENCE: {32}
.TRACE: {5}
.___v_desugar_6 = pyimport "md"
.md = pyimport "md"
.mess_ratio: (decoded_sequence: Str, maximum_threshold: Float := Float, debug: Bool := Bool) -> Float
.___v_desugar_7 = pyimport "models"
.models = pyimport "models"
.CharsetMatch: Never
.CharsetMatches: Never
.___v_desugar_8 = pyimport "utils"
.utils = pyimport "utils"
.any_specified_encoding: (sequence: global::Bytes, search_zone: Int := Int) -> NoneType or Str
.cut_sequence_chunks: (sequences: global::Bytes, encoding_iana: Str, offsets: Obj, chunk_size: Int, bom_or_sig_available: Bool, strip_sig_or_bom: Bool, sig_payload: global::Bytes, is_multi_byte_decoder: Bool, decoded_payload: NoneType or Str := NoneType or Str) -> NoneType
.iana_name: (cp_name: Str, strict: Bool := Bool) -> Str
.identify_sig_or_bom: (sequence: global::Bytes) -> global::Tuple([NoneType or Str, global::Bytes])
.is_cp_similar: (iana_name_a: Str, iana_name_b: Str) -> Bool
.is_multi_byte_encoding: (name: Str) -> Bool
.should_strip_sig_or_bom: (iana_encoding: Str) -> Bool
.logger: Never
.explain_handler: Never

.from_bytes: (sequences: global::Bytes, steps: Int := Int, chunk_size: Int := Int, threshold: Float := Float, cp_isolation: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), cp_exclusion: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), preemptive_behaviour: Bool := Bool, explain: Bool := Bool, language_threshold: Float := Float, enable_fallback: Bool := Bool) -> Never
.from_fp: (fp: Obj, steps: Int := Int, chunk_size: Int := Int, threshold: Float := Float, cp_isolation: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), cp_exclusion: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), preemptive_behaviour: Bool := Bool, explain: Bool := Bool, language_threshold: Float := Float, enable_fallback: Bool := Bool) -> Never
.from_path: (path: global::Bytes or Str, steps: Int := Int, chunk_size: Int := Int, threshold: Float := Float, cp_isolation: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), cp_exclusion: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), preemptive_behaviour: Bool := Bool, explain: Bool := Bool, language_threshold: Float := Float, enable_fallback: Bool := Bool) -> Never
.is_binary: (fp_or_path_or_payload: Obj, steps: Int := Int, chunk_size: Int := Int, threshold: Float := Float, cp_isolation: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), cp_exclusion: NoneType or global::List!(Str, _: Nat) := NoneType or global::List!(Str, _: Nat), preemptive_behaviour: Bool := Bool, explain: Bool := Bool, language_threshold: Float := Float, enable_fallback: Bool := Bool) -> Bool
